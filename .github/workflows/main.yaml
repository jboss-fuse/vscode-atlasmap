name: Main CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  main:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18.15.x
          cache: npm

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"

      - name: Test Java version
        run: java --version

      - name: Install typescript, @vscode/vsce
        run: |
          npm install -g typescript @vscode/vsce
          vsce --version

      - name: npm-ci
        run: npm ci

      - name: npm-compile
        run: npm run vscode:prepublish

      - name: test (ubuntu)
        id: test_Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum npm test

      - name: test (macos, windows)
        if: matrix.os != 'ubuntu-latest'
        run: npm test

      - name: ui test (ubuntu)
        id: uiTest_Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum npm run ui-test

      - name: ui test (macos, windows)
        id: uiTest_MacOS_Windows
        if: matrix.os != 'ubuntu-latest'
        run: npm run ui-test

      - name: vsce-package
        run: vsce package

      - name: Store VS Code logs
        uses: actions/upload-artifact@v4
        if: failure() && matrix.os != 'windows-latest'
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-camel-lsp-log
          path: |
            /tmp/log-camel-lsp.log
            /tmp/log-camel*.log.gz

      - name: Store test logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-test-logs
          path: .vscode-test/logs/*

      - name: Store UI test logs
        uses: actions/upload-artifact@v4
        if: failure() && (steps.uiTest_Ubuntu.outcome == 'failure' || steps.uiTest_MacOS_Windows.outcome == 'failure')
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-ui-test-logs
          path: test-resources/settings/logs/*

      - name: Store UI test screenshots
        uses: actions/upload-artifact@v4
        if: failure() && (steps.uiTest_Ubuntu.outcome == 'failure' || steps.uiTest_MacOS_Windows.outcome == 'failure')
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-ui-test-screenshots
          path: test-resources/screenshots/*.png

  check:
    if: always()
    runs-on: ubuntu-latest
    name: Status Check
    needs: [ main ]
    steps:
      - name: Test Matrix Result
        run: |
          echo result = ${{ needs.main.result }}
      - name: Status Check - success
        if: ${{ needs.main.result == 'success' }}
        run: |
          echo "All tests successfully completed!"
          exit 0
      - name: Status Check - failure
        if: ${{ needs.main.result != 'success' }}
        run: |
          echo "Status Check failed!"
          exit 1
